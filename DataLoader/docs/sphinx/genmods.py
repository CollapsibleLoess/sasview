from __future__ import with_statement
import os.path

MODULE_TEMPLATE=""".. Autogenerated by genmods.py

******************************************************************************
%(name)s
******************************************************************************

:mod:`%(package)s.%(module)s`
==============================================================================

.. automodule:: %(package)s.%(module)s
   :members:
   :undoc-members:
   :inherited-members:
   :show-inheritance:

"""

INDEX_TEMPLATE=""".. Autogenerated by genmods.py

.. _api-index:

##############################################################################
   %(package_name)s
##############################################################################

.. only:: html

   :Release: |version|
   :Date: |today|

.. toctree::

   %(rsts)s
"""


def genfiles(package, package_name, modules, dir='api'):

    if not os.path.exists(dir):
        os.makedirs(dir)

    for module,name in modules:
        with open(os.path.join(dir,module+'.rst'), 'w') as f:
            f.write(MODULE_TEMPLATE%locals())

    rsts = "\n   ".join(module+'.rst' for module,name in modules)
    with open(os.path.join(dir,'index.rst'),'w') as f:
        f.write(INDEX_TEMPLATE%locals())


modules=[
    ('data_info', 'data_info'),
    ('loader', 'loader'),
    ('manipulations', 'manipulations'),
    ('qsmearing', 'qsmearing'),
    ('smearing_2d', 'smearing_2d'),
]
package='DataLoader'
package_name='Reference'
#genfiles(package, package_name, modules)

if __name__ == "__main__":
    genfiles(package, package_name, modules, dir='api')
    
    modules=[
    ('abs_reader', 'abs_reader'),
    ('ascii_reader', 'ascii_reader'),
    ('associations', 'associations'),
    ('cansas_reader', 'cansas_reader'),
    ('hfir1d_reader', 'hfir1d_reader'),
    ('IgorReader', 'IgorReader'),
    ('red2d_reader', 'red2d_reader'),
    ('tiff_reader', 'tiff_reader'),
    ]
    package='DataLoader.readers'
    package_name='Readers'
    genfiles(package, package_name, modules, dir='api/readers')
    print "Sphinx: generate .rst files complete..."